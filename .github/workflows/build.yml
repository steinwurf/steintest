name: Build go binaries
on:
  push:
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.1'

      - name: Install dependencies
        run: go mod download 

      - name: build server
        run: go build -o ./bin/server ./cmd/server

      - name: build client
        run: go build -o ./bin/client ./cmd/client


      - name: Auto Generate Next Release Tag
        uses: amitsingh-007/next-release-tag@v3.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: echo release tag
        run: echo $steps.generate_release_tag.outputs.release_tag

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.generate_release_tag.outputs.release_tag }}
          release_name: Release ${{ steps.generate_release_tag.outputs.release_tag }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Upload Release Asset - server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/server
          asset_name: server
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - client
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/client
          asset_name: client
          asset_content_type: application/octet-stream