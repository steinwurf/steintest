name: Build go binaries and test them
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.1'


      - name: Install dependencies
        run: cd cmd/client && go mod download 

      - name: build server
        run: go build -o ./bin/server ./cmd/server

      - name: build client
        run: go build -o ./bin/client ./cmd/client

      - name: copy server to demo
        run: cp ./bin/server ./demo/server

      - name: copy client to demo
        run: cp ./bin/client ./demo/client

      - name: Pull MongoDB Docker image
        run: sudo docker pull mongo

      - name: Start MongoDB container
        run: |
          sudo docker run -d -p 27017:27017 --name mongo mongo
          sudo docker ps -a

      - name: Install MongoDB client
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org-shell

      - name: Create database and collection
        run: |
          echo 'use test' | mongo --host localhost --port 27017
          echo 'db.createCollection("test")' | mongo --host localhost --port 27017 test


      - name: create server params as json
        run: |
            echo '{"port": "8080", "dbconnectionstring": "mongodb://localhost:27017", "collectionname": "test", "databasename": "test", "servername": "test"}' > ./demo/server_params.json

      - name: create the connection string
        run: |
          echo "mongodb://localhost:27017" > ./demo/connection_string.txt

      - name: Change the resolv.conf file
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf

      - name: setup the namespaces
        run: sudo sh ./demo/sh_demo/create_ns.sh

      - name: run the server
        run: sudo ip netns exec ns1 ./demo/server -serverParams ./demo/server_params.json &

      - name: run the client
        run: sudo ip netns exec ns2 ./demo/client -Ip 10.0.0.2 -Duration 10

      - name: run the tests
        run: |
          cd tests
          pip install -r requirements.txt 
          pytest -s
      
      

      
